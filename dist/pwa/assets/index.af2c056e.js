import{a as c}from"./axios.7331a07d.js";const s=c.create({baseURL:"/api",timeout:1e3});s.interceptors.request.use(e=>e,e=>Promise.reject(e));s.interceptors.response.use(e=>e.data,e=>{const{response:r,config:a}=e;let u="";if(r)switch(r.status){case 302:u="Api\u91CD\u65B0\u5B9A\u5411";break;case 400:u="Request Body\u683C\u5F0F\u932F\u8AA4";break;case 401:u="\u672A\u6388\u6B0A";break;case 403:u="\u7981\u6B62\uFF01\u7121\u6B0A\u9650";break;case 404:u="\u67E5\u7121\u8CC7\u6599";break;case 408:u="\u8ACB\u6C42\u8D85\u6642";break;case 500:u="\u4F3A\u670D\u5668\u554F\u984C";break;case 501:u="\u670D\u52D9\u672A\u555F\u7528";break;case 503:u="\u670D\u52D9\u4E0D\u53EF\u4F7F\u7528";break;case 504:u="\u670D\u52D9\u66AB\u6642\u7121\u6CD5\u4F7F\u7528\uFF0C\u8ACB\u7A0D\u5019\u518D\u8A66";break;case 505:u="Http\u7248\u672C\u5DF2\u4E0D\u652F\u6301";break;default:u="\u7570\u5E38";break}else if(!window.navigator.onLine)return Promise.reject(new Error("\u8ACB\u6AA2\u67E5\u7DB2\u8DEF\u9023\u7DDA"));return Promise.reject(u)});const t=async e=>new Promise((r,a)=>{s(e).then(u=>{r(u)}).catch(async u=>{a(u)})}),n=()=>t({url:"/playlists",method:"get"}),i=()=>t({url:"/tracks",method:"get"});export{n as a,i as g};
